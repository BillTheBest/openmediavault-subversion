#!/bin/sh
#
# This file is part of openmediavault-subversion.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Marcel Beck <marcel.beck@mbeck.org>
# @copyright Copyright (c) 2012 Marcel Beck
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

case "$1" in
    configure)
        echo "Initialize configuration"

        if ! omv_config_exists "/config/services/subversion"; then

            object="<enable>0</enable>"
            object="${object}<require-auth>0</require-auth>"
            object="${object}<realm>Subversion Repositories on OMV</realm>"
            object="${object}<mntentref></mntentref>"
            object="${object}<repository-root></repository-root>"
            object="${object}<repos></repos>"

            omv_config_add_element "/config/services" "subversion" "${object}" true
        fi

        index=$(omv_config_get_count "//services/subversion/repos/repo")
        while [ ${index} -gt 0 ]
        do
            reporef=$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/uuid")

            privileges_index=$(omv_config_get_count "//services/subversion/repos/repo[uuid='${reporef}']/privileges/privilege")
            while [ ${privileges_index} -gt 0 ]
            do
                USERUUID="$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/userref")"
                if [ "${USERUUID}" != "" ]; then
                    if omv_isuuid "${USERUUID}"; then
                        USERNAME=$(omv_config_get "//system/usermanagement/users/user[uuid='${USERUUID}']/name")
                        if ! omv_config_exists "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/username"; then
                            echo "Transform User UUID: ${USERUUID} to Username: ${USERNAME}"
                            omv_config_add_element "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]" "username" "${USERNAME}"
                            omv_config_delete "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/userref"
                        fi
                    fi
                fi

                GROUPUUID="$(omv_config_get "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupref")"
                if [ "${GROUPUUID}" != "" ]; then
                    if omv_isuuid "${GROUPUUID}"; then
                        GROUPNAME=$(omv_config_get "//system/usermanagement/groups/group[uuid='${GROUPUUID}']/name")
                        if ! omv_config_exists "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupname"; then
                            echo "Transform Group UUID: ${GROUPUUID} to Groupname: ${GROUPNAME}"
                            omv_config_add_element "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]" "groupname" "${GROUPNAME}"
                            omv_config_delete "//services/subversion/repos/repo[position()=${index}]/privileges/privilege[position()=${privileges_index}]/groupref"
                        fi
                    fi
                fi

                privileges_index=$(( ${privileges_index} - 1 ))
            done

            index=$(( ${index} - 1 ))
        done

        # Enable required apache modules
        echo "Enable apache modules"
        a2enmod authnz_external dav_svn dav_fs

        echo "Clean up old installation"
        # Clean up old installation?
        if [ -f /etc/apache2/conf.d/omv-subversion ]; then
            /bin/rm -f /etc/apache2/conf.d/omv-subversion
        fi

        echo "Restart apache2"
        monit restart apache2

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
